DECLARE
    v_roll_no NUMBER;
    v_attendance NUMBER;
    v_status VARCHAR2(20);

    -- Exception handling variables
    v_custom_exception EXCEPTION;
    PRAGMA EXCEPTION_INIT(v_custom_exception, -20001);

BEGIN
    -- Accepting input from the user
    v_roll_no := &roll_no;  -- Use substitution variable for roll_no

    -- Fetching attendance from Stud table for the entered roll number
    SELECT Attendance, Status INTO v_attendance, v_status
    FROM Stud
    WHERE Roll = v_roll_no;

    -- Checking attendance percentage
    IF v_attendance < 75 THEN
        -- Attendance less than 75%, term not granted
        DBMS_OUTPUT.PUT_LINE('Term not granted. Attendance is less than 75%.');
        UPDATE Stud SET Status = 'Detained' WHERE Roll = v_roll_no;
    ELSE
        -- Attendance 75% or more, term granted
        DBMS_OUTPUT.PUT_LINE('Term granted. Attendance is 75% or more.');
        UPDATE Stud SET Status = 'Not Detained' WHERE Roll = v_roll_no;
    END IF;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        -- Handle exception if the entered roll number is not found
        DBMS_OUTPUT.PUT_LINE('Roll number ' || v_roll_no || ' not found in the Stud table.');
    WHEN v_custom_exception THEN
        -- Handle custom exception (e.g., negative attendance)
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    WHEN OTHERS THEN
        -- Handle other exceptions
        DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
END;
/
